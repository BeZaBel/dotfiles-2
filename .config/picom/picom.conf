# Configured by Itsnexn (itsnexn.xyz)
# Repository: https://github.com/itsnexn/dotfiles

# For more information read the sample config in picom's repository:
# -- https://github.com/yshui/picom

# Corners ======================================================================

corner-radius = 0.0;

rounded-corners-exclude = [
	#"window_type = 'normal'", # for all windows
	"! name~=''", # exclude windows with no name such as qtile's bar
	"name = 'Notification'",
	"class_g = 'dmenu'",
	"class_g = 'wired'",
	"class_g = 'dwm'",
	"class_g = 'dwmsystray'",
];

# Shadows ======================================================================

shadow = false;
shadow-radius = 12;
shadow-opacity = 0.85
shadow-offset-x = -15;
shadow-offset-y = -3;

# shadow-color = "#000000"

shadow-exclude = [
	"name = 'Notification'",
	"class_g = 'vlc'",
	"class_g = 'TelegramDesktop'",
	"class_g = 'dwm'",
	"class_g = 'dwmsystray'",
	"class_g = 'dmenu'",
	"_GTK_FRAME_EXTENTS@:c"
];

# Specify a list of conditions of windows that should have no shadow painted
# over, such as a dock window.
# clip-shadow-above = [];

# Fading =======================================================================

fading = true;
fade-in-step = 0.03;
fade-out-step = 0.03;
# fade-delta = 10 # in ms

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
	"class_g = 'TelegramDesktop'",
	"class_g = 'flameshot'",
	"class_g = 'slop'" # maim
];

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in
# Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false

# Transparency / Opacity =======================================================

active-opacity = 1.0;
inactive-opacity = 1.0;

# frame-opacity = 1.0;     # titlebars + borders (0.1 - 1.0)
# inactive-dim = 0.0;      # (0.1 - 1.0)
# inactive-dim-fixed = 1.0 # Use fixed val, instead of adjusting to win opacity

# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values
# of windows. (defaults to false)
inactive-opacity-override = true;

focus-exclude = [
	"class_g = 'TelegramDesktop'",
	"class_g = 'Bar'",
	"class_g = 'dwmsystray'",
	"class_g = 'slop'"
];

opacity-rule = [
	"100:class_g    = 'slop'", # maim
	"100:class_g    = 'TelegramDesktop'",
	"100:class_g    = 'wired'",
	"96:class_g     = 'Brave-browser'",
	"100:name       = 'plank'"
];

# Background-Blurring ==========================================================

blur: {
    # method = "dual_kawase";
    method = "none";
    strength = 5;
    # deviation = 1.0;
    # kernel = "11x11gaussian";
    background = false;
    background-frame = false;
    background-fixed = false;
    kern = "3x3box";
};

blur-background-exclude = [
	# "window_type = 'dock'",
	"class_g = 'TelegramDesktop'",
	"class_g = 'firefox'",
	"class_g = 'dwmsystray'",
	"class_g = 'wired'",
	"class_g = 'slop'", # maim
	"_GTK_FRAME_EXTENTS@:c"
];

# General settings =============================================================

backend = "glx"; # xrender, glx, xr_glx_hybrid
vsync = false;

# Try to detect WM windows (a non-override-redirect window with no child that
# has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with
# 'WM_STATE' focused.
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them shaped
# windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers not
# passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, rather
# than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
use-ewmh-active-win = true;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows in the same
# group focused at the same time.
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
# detect-client-leader = false
detect-client-leader = true;

# Set the log level. Possible values are: "trace", "debug", "info", "warn",
#                                         "error"
log-level = "warn";
# log-file = '/path/to/your/log/file'
# Show all X errors (for debugging)
# show-all-xerrors = false
# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'
