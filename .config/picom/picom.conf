# This file is part of Itsnexn's dotfiles.
#
# Repository: https://github.com/itsnexn/dotfiles
# LICENSE:    MIT (https://opensource.org/licenses/MIT)

# For more information read the sample config in picom's repository:
# -- https://github.com/yshui/picom

# -==( TOC
# - Corners
# - Shadows
# - Fading
# - Transparency/Opacity
# - Background-Blurring
# - General settings
# )

# Corners ======================================================================
# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 0.0;

rounded-corners-exclude = [
  #"window_type = 'normal'", # for all windows
  "! name~=''", # exclude windows with no name such as qtile's bar
  "name = 'Notification'",
  "class_g = 'dmenu'",
  "class_g = 'wired'",
  "class_g = 'dwm'",
  "class_g = 'dwmsystray'",
];

# Shadows ======================================================================
# Enabled client-side shadows on windows. Note desktop windows (windows with
# '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, unless explicitly requested
# using the wintypes option.
shadow = false;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 12;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = 0.85

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = -15;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = -3;

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000).
# shadow-color = "#000000"

shadow-exclude = [
    "name = 'Notification'",
    "class_g = 'vlc'",
    "class_g = 'TelegramDesktop'",
    "class_g = 'dwm'",
    "class_g = 'dwmsystray'",
    "class_g = 'dmenu'",
    "_GTK_FRAME_EXTENTS@:c"
];

# Specify a list of conditions of windows that should have no shadow painted
# over, such as a dock window.
# clip-shadow-above = []

# Fading =======================================================================
# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
    "class_g = 'TelegramDesktop'",
    "class_g = 'flameshot'",
    "class_g = 'slop'" # maim
]

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in
# Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false

# Transparency / Opacity =======================================================
# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
# active-opacity = 1.0;

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 0.8;

# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values
# of windows. (defaults to false)
inactive-opacity-override = true;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
inactive-dim = 0.2;

# Use fixed inactive dim value, instead of adjusting according to window
# opacity.
# inactive-dim-fixed = 1.0

# Specify a list of conditions of windows that should always be considered
# focused.
focus-exclude = [
  "class_g = 'TelegramDesktop'",
  "class_g = 'Bar'",
  "class_g = 'dwmsystray'",
  "class_g = 'slop'"
];

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
opacity-rule = [
  "100:class_g    = 'slop'", # maim
  "100:class_g    = 'TelegramDesktop'",
  "100:class_g    = 'wired'",
  "100:name       = 'plank'"
];

# Background-Blurring ==========================================================
# Parameters for background blurring, see the *BLUR* section for more
# information.
blur: {
    method = "dual_kawase";
    # method = "kernel";
    strength = 5;
    # deviation = 1.0;
    # kernel = "11x11gaussian";
    background = false;
    background-frame = false;
    background-fixed = false;
    kern = "3x3box";
}

# Exclude conditions for background blur.
blur-background-exclude = [
  #"window_type = 'dock'",
  "class_g = 'TelegramDesktop'",
  "class_g = 'firefox'",
  "class_g = 'dwmsystray'",
  "class_g = 'wired'",
  "_GTK_FRAME_EXTENTS@:c"
];

# General settings =============================================================
# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
backend = "glx"

# Enable/disable VSync.
vsync = false;

# Try to detect WM windows (a non-override-redirect window with no child that
# has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with
# 'WM_STATE' focused.
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them shaped
# windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers not
# passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, rather
# than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
use-ewmh-active-win = true

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows in the same
# group focused at the same time.
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
# detect-client-leader = false
detect-client-leader = true

# Do not use EWMH to detect fullscreen windows. Reverts to checking if a window
# is fullscreen based only on its size and coordinates.
# no-ewmh-fullscreen = false

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
# transparent-clipping = false

# Set the log level. Possible values are: "trace", "debug", "info", "warn",
#                                         "error"
log-level = "warn";
# log-file = '/path/to/your/log/file'
# Show all X errors (for debugging)
# show-all-xerrors = false
# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'
